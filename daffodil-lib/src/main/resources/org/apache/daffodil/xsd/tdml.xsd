<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
  xmlns:xs="http://www.w3.org/2001/XMLSchema" 
  xmlns="http://www.w3.org/2001/XMLSchema" 
  targetNamespace="http://www.ibm.com/xmlns/dfdl/testData" 
  xmlns:tns="http://www.ibm.com/xmlns/dfdl/testData" 
  elementFormDefault="unqualified"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" 
  xmlns:daf="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:ext" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <xsd:import namespace="http://www.w3.org/2001/XMLSchema" />
  <xsd:import namespace="urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:ext" />
  <xsd:import namespace="http://www.ogf.org/dfdl/dfdl-1.0/"/>
  <xsd:import namespace="http://www.ogf.org/dfdl/dfdl-1.0/extensions"/>

  <xsd:include schemaLocation="tdml-core.xsd"/>
  
<!-- We want to allow an xsd:schema to be named and directly embedded in 
  the TDML thereby allowing a fully-self-contained single file test case as 
  an exchange medium for tests. -->

  <element name="defineSchema" type="tns:defineSchemaType" substitutionGroup="tns:testSuiteChoices"/>
  <complexType name="defineSchemaType">
    <choice maxOccurs='unbounded'>
      <element ref='dfdl:format'/>
      <element ref='dfdl:defineVariable'/>
      <element ref='dfdl:defineEscapeScheme'/>
      <element ref='dfdl:defineFormat'/>
      <element ref='xs:element'/>
      <element ref='xs:complexType'/>
      <element ref='xs:group'/>
      <element ref='xs:simpleType'/>
      <element ref='xs:include'/>
      <element ref='xs:import'/>
                        <!-- <any namespace="##other" processContents="lax"/> -->
    </choice>
    <attribute name="name" type="xs:NCName" use="required"/>
                <!-- We want the default to be 'unqualified' in the longer term but 
                     we leave it 'qualified here to prevent lots of tests from breaking. -->
    <attribute name="elementFormDefault" type="tns:elementFormDefaultType" default="qualified"/>
        <!-- we want the default for useDefaultNamespace to be false longer term but
             we leave it as true here to prevent lots of tests from breaking.
             81 tests to be exact. -->
    <attribute name="useDefaultNamespace" type="xs:boolean" default="true">
      <annotation><documentation>
        Controls whether a xmlns="http://example.com" default namespace prefix
        definition will be provided for the embedded schema.

        This matters when the defined schema is used to validate the infoset xml
        before unparsing, or after parsing, as it affects the interpretation of
        path expressions in the DFDL schema based on the unqualifiedPathStepPolicy
        tunable.

        False is recommended since default namespaces can be confusing.
      </documentation></annotation>
    </attribute>
    <attribute ref="tns:tutorialInclude"/>
  </complexType>

  <element name="defineConfig" type="tns:defineConfigType" substitutionGroup="tns:testSuiteChoices"/>
  <complexType name="defineConfigType">
    <sequence>
      <element ref="daf:externalVariableBindings" minOccurs="0" maxOccurs="1"/>
      <element ref="daf:tunables" minOccurs="0" maxOccurs="1"/>
    </sequence>
    <attribute name="name" type="xs:NCName" use="required"/>
  </complexType>

</xsd:schema>
